generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model User {
  Userid     String  @id @default(cuid()) // Primary key
  email      String  @unique
  password   String?
  username   String? @unique
  ProfilePic String? // profile picture
  role       Role    @default(USER)
  provider   String?
  providerId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  wishlist wishlist[]
  rating   Rating[]
  download Downloads[]
  note     Note[] // relationship with notes
  Image    Image[]
}

enum Role {
  SELLER
  USER
}

model Note {
  Noteid      String     @id @default(cuid()) // Primary key
  title       String
  subject     String
  price       Float
  description String
  visibility  Visibility @default(PUBLIC)

  createdBy   User?   @relation(fields: [createdById], references: [Userid]) // Creator of the note
  createdById String? // Foreign key for user

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  purchase purchase[]
  wishlist wishlist[]
  rating   Rating[]
  download Downloads[] 
    images     Image[] 
}

enum Visibility {
  PUBLIC
  PRIVATE
}

model purchase {
  id        Int      @id @default(autoincrement())
  noteId    String
  Note      Note     @relation(fields: [noteId], references: [Noteid])
  amount    Float
  createdAt DateTime @default(now())
}

model wishlist {
  id     Int    @id @default(autoincrement())
  userId String
  User   User   @relation(fields: [userId], references: [Userid])
  noteId String
  Note   Note   @relation(fields: [noteId], references: [Noteid])
}

model categories {
  id   String @id @unique
  name String
}

model Rating {
  noteId    String   @unique
  Note      Note     @relation(fields: [noteId], references: [Noteid])
  rating    Int
  userId    String
  User      User     @relation(fields: [userId], references: [Userid])
  comment   String
  createdAt DateTime @default(now())
}

model Downloads {
  id     String @id @unique @default(cuid()) // this makes `id` optional in the create input
  noteId String
  Note   Note   @relation(fields: [noteId], references: [Noteid])
  userId String
  User   User   @relation(fields: [userId], references: [Userid])
}

model Image {
  ImageId String  @id @default(uuid())
  userId  String?
  user    User?   @relation(fields: [userId], references: [Userid])
  url     String
  createdAt DateTime @default(now())
  noteId    String?  
  note      Note?    @relation(fields: [noteId], references: [Noteid])
}
